<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAB4AHgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/KDRmigBo4FRyzeVWD8QviJo3wu8IXmu+INSs9J0fTo/Nuby
        4fy44U9c18O/Fb9sTx1+1LLJZ+EZ7/4e+AJP+YpJH5Wta3H/ANM/+faP/wAi/wDXKvUyvJ8RjneGkVvJ
        7Ly835I8vMc2oYNWlrJ7RW7/AMl5s+nvjt+2x8Pf2e5fseua6s2ssuItH06P7dqMn0to8yfpXieu/t9f
        FDx+PL8F/DO10Gxm/wBXqHizUvKl/wDAaL/47Xl/w98AeH/hlDJ/ZVn5NzL/AMfN5cSebdXcn/PWSST9
        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
        JHHHRRXzHPKTvI+jUUlZE1FFFAwooooA/9k=
</value>
  </data>
</root>